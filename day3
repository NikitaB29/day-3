---------------------------Employee------------------------------
using System;
                   
class Employee
{
	public int empid {get; set;}
	public string epm_name {get; set;}
}
  class program
  {
    public static void Main(string[] args)
    {
	  	Employee employee = new Employee();
		Console.WriteLine("Enter Employee ID: ");
		employee.empid=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("Enter Employee name: ");
		employee.empid=Convert.ToInt32(Console.ReadLine());
		
		 Console.WriteLine("Employee Details are: ");
		 Console.WriteLine("Employee ID: " +employee.empid);
		 Console.WriteLine("Employee name: "+employee.epm_name);
		 Console.ReadLine();
	}
}
 
--------------------------Student------------------------------
using System;
                   
public class Program
{
	class Student
{
	public int Roll_no {get; set;}
	public string Student_name {get; set;}
}
    public static void Main()
    {
		Student s = new Student();
		Console.WriteLine("Enter Student Roll_No: ");
		s.Roll_no=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("EnterStudent name: ");
        s.Student_name = Console.ReadLine();
		
		 Console.WriteLine("Student Details are: ");
		 Console.WriteLine("Roll No: " +s.Roll_no);
		 Console.WriteLine("Student name: "+s.Student_name);
		 Console.ReadLine();
    }

}	  

-----------------------------Student Method---------------------
using System;
                   
public class Program
{
	class Student
{
	public int Roll_no {get; set;}
	public string Student_name {get; set;}

	public void GetStudentData()
	{
		Console.WriteLine("Enter Student Roll_No: ");
		Roll_no=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("EnterStudent name: ");
        Student_name = Console.ReadLine();
	}
	public void PrimaryStudentDetails()
	{
		 Console.WriteLine("Student Details are: ");
		 Console.WriteLine("Roll No: " + Roll_no);
		 Console.WriteLine("Student name: "+ Student_name);
		 Console.ReadLine();
	}
	}
    public static void Main()
    {
		Student s = new Student();
		s. GetStudentData();
		s.PrimaryStudentDetails();
		
		/*Console.WriteLine("Enter Student Roll_No: ");
		s.Roll_no=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("EnterStudent name: ");
        s.Student_name = Console.ReadLine();
		
		 Console.WriteLine("Student Details are: ");
		 Console.WriteLine("Roll No: " +s.Roll_no);
		 Console.WriteLine("Student name: "+s.Student_name);*/
		 Console.ReadLine();
    }

}
 
-------------------------Default constructor--------------------------
using System;
                   
class Employee
{
	public int empid ;//{get; set;}
	public string emp_name;// {get; set;}
	public Employee(int empid,string emp_name)
	{
	  this.empid =empid;
		this.emp_name=emp_name;
	}
}
public class program
  {
    public static void Main(string[] args)
    {
	  	Employee employee = new Employee(1,"nikita");
		/*Console.WriteLine("Enter Employee ID: ");
		employee.empid=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("Enter Employee name: ");
		employee.empid=Convert.ToInt32(Console.ReadLine());*/
		
		 Console.WriteLine("Employee Details are: ");
		 Console.WriteLine("Employee ID: " +employee.empid);
		 Console.WriteLine("Employee name: "+employee.emp_name);
		 Console.ReadLine();
	}
}
 --------------------------Parameter constructor-----------------------
using System;
                   
public class Program
{
	class Student
{
	public int Roll_no {get; set;}
	public string Student_name {get; set;}

		public Student(Student s)
		{
			Roll_no = s.Roll_no;
			Student_name=s.Student_name;
		}
		public Student(int Roll_no,string Student_name)
		{
			this.Roll_no=Roll_no;
			this.Student_name=Student_name;
		}
	/*public void GetStudentData()
	{
		Console.WriteLine("Enter Student Roll_No: ");
		Roll_no=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("EnterStudent name: ");
        Student_name = Console.ReadLine();
	}*/
	public void PrimaryStudentDetails()
	{
		 Console.WriteLine("Student Details are: ");
		 Console.WriteLine("Roll No: " + Roll_no);
		 Console.WriteLine("Student name: "+ Student_name);
		 Console.ReadLine();
	}
	}
    public static void Main()
    {
		Student s1 = new Student(1,"Nikita");
		Student s2 = new Student(s1);
		s2.PrimaryStudentDetails();
		/*Student s = new Student();
		s. GetStudentData();
		s.PrimaryStudentDetails();*/
		
		/*Console.WriteLine("Enter Student Roll_No: ");
		s.Roll_no=Convert.ToInt32(Console.ReadLine());
		
	    Console.WriteLine("EnterStudent name: ");
        s.Student_name = Console.ReadLine();
		
		 Console.WriteLine("Student Details are: ");
		 Console.WriteLine("Roll No: " +s.Roll_no);
		 Console.WriteLine("Student name: "+s.Student_name);*/
		 Console.ReadLine();
    }

}
 ------------------------------Inheritance--------------------------------
using System;
                   
public class Employee
{
	public float salary=40000;
}
public class Programmer:Employee
{
 	public float bonus=10000;
}
public class  Class6
{
	public static void Main()
	 {
    Programmer p1=new Programmer();
		Console.WriteLine(p1.bonus);
		Console.WriteLine(p1.salary);
		Console.ReadLine();
	}
}
 
----------------------------inheritance-------------------
using System;

namespace ConsoleApp1
{
    public class Animal
    {
        public void eat()
        {
            Console.WriteLine("Dog can eat");
        }
    }
    public class Dog: Animal
    {
        public void bark()
        {
            Console.WriteLine("Dog can Bark");
        }
       public static void Main(string[] args)
        {
            Dog d = new Dog();
            d.eat();
            d.bark();
            Console.ReadLine();
        }
    }
}
------------------------shape---------------------------------------
using System;

public class shape 
{
 
  
}

public class rectangle : shape  
{
 public void rectarea(int a , int b)
 {
 Console.WriteLine("area of rect is "+(a*b));
 }
}
public class  square : rectangle
{
public void squarearea(int s)
{
Console.WriteLine("area of square is "+(s*s));
}
}


public class Program
{
  public static void Main()
  {
	  square s1 = new square();
	  Console.WriteLine("calculate area for 1.rectangle\n2.area of square");
	  int choice=Convert.ToInt32(Console.ReadLine());
	
	  switch(choice)
	  {
		  case 1:
			  {
			   Console.WriteLine("enter length");
	  int a=Convert.ToInt32(Console.ReadLine());
			   Console.WriteLine("enter breadth");
	  int b=Convert.ToInt32(Console.ReadLine());
			  s1.rectarea(a,b);
			  break;}
		  case 2:
			  {
			  Console.WriteLine("enter side of square");
	  int s=Convert.ToInt32(Console.ReadLine());
			   s1.squarearea(s);
			  break;
			  }
	 
		  default:Console.WriteLine("invalid input");
			  break;
	  }
  }
}
	  
---------------------------Overide abstract discount-------------------------------------
using System;

public abstract class wholeseller
{
  public abstract void Discount();
}
public class retailer : wholeseller
{
int price=0;
 public void Price()
  {
    Console.WriteLine("enter price");
	price=Convert.ToInt32(Console.ReadLine());
	  
  }
  public override void Discount()
  {
  Console.WriteLine("enter discount");
	int discount=Convert.ToInt32(Console.ReadLine());
	int amt=price-discount;
	Console.WriteLine("Discounted amount is "+amt);
    
  }
}

public class Program
{
public   static void Main(string[] args)
  {
    retailer r1 = new retailer(); 
    r1.Price(); 
    r1.Discount(); 	
  }
}

using System;
 
public class StudentAndTeacherTest
{
    public static void Main()
    {
        Person myPerson = new Person();
        myPerson.Greet();
 
        Student myStudent = new Student();
        myStudent.SetAge(21);
        myStudent.Greet();
        myStudent.ShowAge();
        myStudent.Study();
 
        Teacher myTeacher = new Teacher();
        myTeacher.SetAge(30);
        myTeacher.Greet();
        myTeacher.Explain();
    }
}
 
public class Person
{
    protected int age;
 
    public void Greet()
    {
        Console.WriteLine("Hello!");
    }
 
    public void SetAge(int n)
    {
        age = n;
    }
}
 
public class Student : Person
{
    public void Study() 
    {
        Console.WriteLine("I'm studying");
    }
 
    public void ShowAge()
    {
        Console.WriteLine("My age is {0} years old", age);
    }
}
 
public class Teacher : Person
{
    public void Explain()
    {
        Console.WriteLine("I'm explaining");
    }
}

-----------------------------Photobook---------------------------
using System;
 
public class PhotoBookTest
{
    public static void Main()
    {
        PhotoBook myAlbum1 = new PhotoBook();
        Console.WriteLine(myAlbum1.GetNumberPages());
 
        PhotoBook myAlbum2 = new PhotoBook(24);
        Console.WriteLine(myAlbum2.GetNumberPages());
 
        SuperPhotoBook myBigPhotoAlbum1 = new SuperPhotoBook();
        Console.WriteLine(myBigPhotoAlbum1.GetNumberPages());
    }
}
 
public class PhotoBook
{
    protected int numPages;
 
    public PhotoBook()
    {
        numPages = 16;
    }
 
    public PhotoBook(int numPages)
    {
        this.numPages = numPages;
    }
 
    public int GetNumberPages()
    {
        return numPages;
    }
}
 
public class SuperPhotoBook : PhotoBook
{
    public SuperPhotoBook()
    {
        numPages = 64;
    }
}	  
	  	  
